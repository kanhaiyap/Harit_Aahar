{"ast":null,"code":"var _jsxFileName = \"/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/Login.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCSRFToken, sendOTP, verifyOTP } from \"../auth/AuthUtils\"; // Ensure these functions are imported\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [otp, setOTP] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const navigate = useNavigate();\n\n  // Determine if the entered identifier is a phone number (only digits)\n  const isPhoneLogin = /^\\d+$/.test(userInfo.email);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo({\n      ...userInfo,\n      [name]: value\n    });\n  };\n\n  // Email/password login\n  const handleLogin = async () => {\n    if (!userInfo.email || !userInfo.password) {\n      alert(\"❌ Please enter both email and password.\");\n      return;\n    }\n    try {\n      const csrfToken = await getCSRFToken();\n      if (!csrfToken) {\n        alert(\"❌ CSRF Token missing. Refresh the page and try again.\");\n        return;\n      }\n      const response = await axios.post(\"http://127.0.0.1:8000/api/auth/login/\", {\n        username: userInfo.email,\n        password: userInfo.password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken\n        },\n        withCredentials: true\n      });\n      if (response.data.success) {\n        const userData = {\n          name: response.data.user.name,\n          email: response.data.user.email,\n          phone_number: response.data.user.phone_number\n        };\n        localStorage.setItem(\"authToken\", response.data.authToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        window.dispatchEvent(new Event(\"storage\"));\n        alert(\"✅ Login successful!\");\n        navigate(\"/profile\");\n      } else {\n        alert(\"❌ Login failed: \" + response.data.message);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"🔥 Login Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert(\"❌ Login failed. Check console for details.\");\n    }\n  };\n\n  // OTP flow functions for phone login\n  const handleSendOTP = async () => {\n    if (!userInfo.email) {\n      alert(\"Please enter your phone number.\");\n      return;\n    }\n    try {\n      const csrfToken = await getCSRFToken();\n      const response = await axios.post(\"http://127.0.0.1:8000/api/auth/send-otp/\", {\n        phone_number: userInfo.email\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken\n        },\n        withCredentials: true\n      });\n      if (response.data.success) {\n        alert(\"✅ OTP sent successfully!\");\n        setOtpSent(true);\n      } else {\n        alert(\"❌ Failed to send OTP: \" + response.data.message);\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error(\"🔥 Error sending OTP:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n      alert(\"❌ Error sending OTP. Check console for details.\");\n    }\n  };\n  const handleVerifyOTP = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      const response = await verifyOTP(userInfo.email, otp);\n      if (response.success) {\n        alert(\"✅ OTP verified successfully!\");\n        setVerified(true);\n      } else {\n        alert(\"❌ Invalid OTP\");\n      }\n    } catch (error) {\n      alert(\"❌ Error verifying OTP\");\n    }\n  };\n  const handleOTPLogin = async () => {\n    try {\n      const csrfToken = await getCSRFToken();\n      const response = await axios.post(\"http://127.0.0.1:8000/api/auth/login-otp/\", {\n        phone: userInfo.email,\n        otp: otp\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken\n        },\n        withCredentials: true\n      });\n      if (response.data.success) {\n        const userData = {\n          name: response.data.user.name,\n          email: response.data.user.email,\n          phone_number: response.data.user.phone_number\n        };\n        localStorage.setItem(\"authToken\", response.data.authToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        window.dispatchEvent(new Event(\"storage\"));\n        alert(\"✅ Login successful!\");\n        navigate(\"/profile\");\n      } else {\n        alert(\"❌ OTP Login failed: \" + response.data.message);\n      }\n    } catch (error) {\n      var _error$response3;\n      console.error(\"🔥 OTP Login Error:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n      alert(\"❌ OTP Login failed. Check console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email or Phone\",\n      value: userInfo.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), isPhoneLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !otpSent ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOTP,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOTP(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), !verified ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerifyOTP,\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOTPLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: userInfo.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/signup'),\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/forgot-password'),\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"RLxB8LUePTwGGrZjmPX5G3Up+gY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","useState","useNavigate","getCSRFToken","sendOTP","verifyOTP","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","userInfo","setUserInfo","email","password","otp","setOTP","otpSent","setOtpSent","verified","setVerified","navigate","isPhoneLogin","test","handleChange","e","name","value","target","handleLogin","alert","csrfToken","response","post","username","headers","withCredentials","data","success","userData","user","phone_number","localStorage","setItem","authToken","JSON","stringify","window","dispatchEvent","Event","message","error","_error$response","console","handleSendOTP","_error$response2","handleVerifyOTP","handleOTPLogin","phone","_error$response3","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/Login.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCSRFToken, sendOTP, verifyOTP } from \"../auth/AuthUtils\"; // Ensure these functions are imported\n\nconst Login = () => {\n  const [userInfo, setUserInfo] = useState({ email: \"\", password: \"\" });\n  const [otp, setOTP] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const navigate = useNavigate();\n\n  // Determine if the entered identifier is a phone number (only digits)\n  const isPhoneLogin = /^\\d+$/.test(userInfo.email);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n\n  // Email/password login\n  const handleLogin = async () => {\n    if (!userInfo.email || !userInfo.password) {\n      alert(\"❌ Please enter both email and password.\");\n      return;\n    }\n    try {\n      const csrfToken = await getCSRFToken();\n      if (!csrfToken) {\n        alert(\"❌ CSRF Token missing. Refresh the page and try again.\");\n        return;\n      }\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/auth/login/\",\n        {\n          username: userInfo.email,\n          password: userInfo.password,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n      if (response.data.success) {\n        const userData = {\n          name: response.data.user.name,\n          email: response.data.user.email,\n          phone_number: response.data.user.phone_number,\n        };\n        localStorage.setItem(\"authToken\", response.data.authToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        window.dispatchEvent(new Event(\"storage\"));\n        alert(\"✅ Login successful!\");\n        navigate(\"/profile\");\n      } else {\n        alert(\"❌ Login failed: \" + response.data.message);\n      }\n    } catch (error) {\n      console.error(\"🔥 Login Error:\", error.response?.data || error);\n      alert(\"❌ Login failed. Check console for details.\");\n    }\n  };\n\n  // OTP flow functions for phone login\n  const handleSendOTP = async () => {\n    if (!userInfo.email) {\n      alert(\"Please enter your phone number.\");\n      return;\n    }\n    try {\n      const csrfToken = await getCSRFToken();\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/auth/send-otp/\",\n        { phone_number: userInfo.email },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n      if (response.data.success) {\n        alert(\"✅ OTP sent successfully!\");\n        setOtpSent(true);\n      } else {\n        alert(\"❌ Failed to send OTP: \" + response.data.message);\n      }\n    } catch (error) {\n      console.error(\"🔥 Error sending OTP:\", error.response?.data || error);\n      alert(\"❌ Error sending OTP. Check console for details.\");\n    }\n  };\n\n  const handleVerifyOTP = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    try {\n      const response = await verifyOTP(userInfo.email, otp);\n      if (response.success) {\n        alert(\"✅ OTP verified successfully!\");\n        setVerified(true);\n      } else {\n        alert(\"❌ Invalid OTP\");\n      }\n    } catch (error) {\n      alert(\"❌ Error verifying OTP\");\n    }\n  };\n\n  const handleOTPLogin = async () => {\n    try {\n      const csrfToken = await getCSRFToken();\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/auth/login-otp/\",\n        {\n          phone: userInfo.email,\n          otp: otp,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n      if (response.data.success) {\n        const userData = {\n          name: response.data.user.name,\n          email: response.data.user.email,\n          phone_number: response.data.user.phone_number,\n        };\n        localStorage.setItem(\"authToken\", response.data.authToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        window.dispatchEvent(new Event(\"storage\"));\n        alert(\"✅ Login successful!\");\n        navigate(\"/profile\");\n      } else {\n        alert(\"❌ OTP Login failed: \" + response.data.message);\n      }\n    } catch (error) {\n      console.error(\"🔥 OTP Login Error:\", error.response?.data || error);\n      alert(\"❌ OTP Login failed. Check console for details.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input \n        type=\"text\" \n        name=\"email\" \n        placeholder=\"Email or Phone\" \n        value={userInfo.email} \n        onChange={handleChange} \n      />\n      {isPhoneLogin ? (\n        <>\n          {!otpSent ? (\n            <button onClick={handleSendOTP}>Send OTP</button>\n          ) : (\n            <>\n              <input \n                type=\"text\" \n                placeholder=\"Enter OTP\" \n                value={otp} \n                onChange={(e) => setOTP(e.target.value)} \n              />\n              {!verified ? (\n                <button onClick={handleVerifyOTP}>Verify OTP</button>\n              ) : (\n                <button onClick={handleOTPLogin}>Login</button>\n              )}\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <input \n            type=\"password\" \n            name=\"password\" \n            placeholder=\"Password\" \n            value={userInfo.password} \n            onChange={handleChange} \n          />\n          <button onClick={handleLogin}>Login</button>\n        </>\n      )}\n      <button onClick={() => navigate('/signup')}>Signup</button>\n      <button onClick={() => navigate('/forgot-password')}>Forgot Password?</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}