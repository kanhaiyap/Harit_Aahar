{"ast":null,"code":"var _jsxFileName = \"/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/Login.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCSRFToken, sendOTP, verifyOTP } from \"../auth/AuthUtils\"; // ‚úÖ Ensure this is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const [otp, setOTP] = useState(\"\");\n  // otpStage can be: \"none\" (no OTP sent), \"sent\" (OTP sent but not verified), or \"verified\" (OTP verified)\n  const [otpStage, setOtpStage] = useState(\"none\");\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo({\n      ...userInfo,\n      [name]: value\n    });\n  };\n  const handleLogin = async () => {\n    console.log(\"üöÄ Attempting login...\");\n    console.log(\"üìå Sending Login Data:\", userInfo); // ‚úÖ Debugging\n\n    if (!userInfo.email || !userInfo.password) {\n      alert(\"‚ùå Please enter both email/phone and password.\");\n      return;\n    }\n    try {\n      const csrfToken = await getCSRFToken(); // ‚úÖ Fetch CSRF token first\n      console.log(\"‚úÖ CSRF Token:\", csrfToken);\n      if (!csrfToken) {\n        alert(\"‚ùå CSRF Token missing. Refresh the page and try again.\");\n        return;\n      }\n      const response = await axios.post(\"http://127.0.0.1:8000/api/auth/login/\", {\n        username: userInfo.email,\n        // ‚úÖ Backend expects \"username\"\n        password: userInfo.password\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken // ‚úÖ Send CSRF token\n        },\n        withCredentials: true // ‚úÖ Allows session cookies\n      });\n      console.log(\"üéâ Login Success:\", response.data);\n      if (response.data.success) {\n        const userData = {\n          name: response.data.user.name,\n          email: response.data.user.email,\n          phone_number: response.data.user.phone_number\n        };\n        localStorage.setItem(\"authToken\", response.data.authToken);\n        alert(\"‚úÖ Login successful!\");\n        localStorage.setItem(\"user\", JSON.stringify(userData)); // ‚úÖ Store full user data\n        window.dispatchEvent(new Event(\"storage\")); // ‚úÖ Notify Layout.js of login\n\n        navigate(\"/profile\"); // Redirect to profile page\n      } else {\n        alert(\"‚ùå Login failed: \" + response.data.message);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error(\"üî• Login Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert(\"‚ùå Login failed. Check console for details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email or Phone\",\n      value: userInfo.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: userInfo.password,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/signup'),\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/forgot-password'),\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"vU0o7AcFrMG+XQu95iduXusx5+8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","useState","useNavigate","getCSRFToken","sendOTP","verifyOTP","jsxDEV","_jsxDEV","Login","_s","userInfo","setUserInfo","email","password","navigate","otp","setOTP","otpStage","setOtpStage","handleChange","e","name","value","target","handleLogin","console","log","alert","csrfToken","response","post","username","headers","withCredentials","data","success","userData","user","phone_number","localStorage","setItem","authToken","JSON","stringify","window","dispatchEvent","Event","message","error","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/Login.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getCSRFToken, sendOTP, verifyOTP} from \"../auth/AuthUtils\"; // ‚úÖ Ensure this is imported\n\nconst Login = () => {\n  const [userInfo, setUserInfo] = useState({ email: \"\", password: \"\" });\n  const navigate = useNavigate();\n  const [otp, setOTP] = useState(\"\");\n  // otpStage can be: \"none\" (no OTP sent), \"sent\" (OTP sent but not verified), or \"verified\" (OTP verified)\n  const [otpStage, setOtpStage] = useState(\"none\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserInfo({ ...userInfo, [name]: value });\n  };\n\n  const handleLogin = async () => {\n    console.log(\"üöÄ Attempting login...\");\n    console.log(\"üìå Sending Login Data:\", userInfo); // ‚úÖ Debugging\n\n    if (!userInfo.email || !userInfo.password) {\n      alert(\"‚ùå Please enter both email/phone and password.\");\n      return;\n    }\n\n    try {\n      const csrfToken = await getCSRFToken(); // ‚úÖ Fetch CSRF token first\n      console.log(\"‚úÖ CSRF Token:\", csrfToken);\n\n      if (!csrfToken) {\n        alert(\"‚ùå CSRF Token missing. Refresh the page and try again.\");\n        return;\n      }\n\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/auth/login/\",\n        {\n          username: userInfo.email, // ‚úÖ Backend expects \"username\"\n          password: userInfo.password,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken, // ‚úÖ Send CSRF token\n          },\n          withCredentials: true, // ‚úÖ Allows session cookies\n        }\n      );\n\n      console.log(\"üéâ Login Success:\", response.data);\n      if (response.data.success) {\n        const userData = {\n          name: response.data.user.name,\n          email: response.data.user.email,\n          phone_number: response.data.user.phone_number,\n        };\n        localStorage.setItem(\"authToken\", response.data.authToken);\n        alert(\"‚úÖ Login successful!\");\n        localStorage.setItem(\"user\", JSON.stringify(userData)); // ‚úÖ Store full user data\n      window.dispatchEvent(new Event(\"storage\")); // ‚úÖ Notify Layout.js of login\n\n\n        navigate(\"/profile\"); // Redirect to profile page\n      } else {\n        alert(\"‚ùå Login failed: \" + response.data.message);\n      }\n    } catch (error) {\n      console.error(\"üî• Login Error:\", error.response?.data || error);\n      alert(\"‚ùå Login failed. Check console for details.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <input type=\"text\" name=\"email\" placeholder=\"Email or Phone\" value={userInfo.email} onChange={handleChange} />\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" value={userInfo.password} onChange={handleChange} />\n      <button onClick={handleLogin}>Login</button>\n      <button onClick={() => navigate('/signup')}>Signup</button>\n      <button onClick={() => navigate('/forgot-password')}>Forgot Password?</button>\n    \n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}