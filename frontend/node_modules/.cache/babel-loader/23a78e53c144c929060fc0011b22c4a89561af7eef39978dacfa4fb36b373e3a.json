{"ast":null,"code":"var _jsxFileName = \"/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { sendOTP, verifyOTP, getCSRFToken } from '../auth/AuthUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userIdentifier, setUserIdentifier] = useState('');\n  const [otp, setOTP] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // ✅ Handle Input Change\n  const handleChange = e => {\n    setUserIdentifier(e.target.value);\n  };\n\n  // ✅ Send OTP\n  const handleSendOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await sendOTP(userIdentifier);\n      if (response.success) {\n        alert('✅ OTP sent successfully!');\n        setOtpSent(true);\n      } else {\n        alert('❌ Failed to send OTP: ' + response.message);\n      }\n    } catch (error) {\n      alert('❌ Error sending OTP');\n    }\n    setLoading(false);\n  };\n\n  // ✅ Verify OTP\n  const handleVerifyOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await verifyOTP(userIdentifier, otp);\n      if (response.success) {\n        alert('✅ OTP verified successfully!');\n        setVerified(true);\n      } else {\n        alert('❌ Invalid OTP');\n      }\n    } catch (error) {\n      alert('❌ Error verifying OTP');\n    }\n    setLoading(false);\n  };\n\n  // ✅ Reset Password\n  const handleResetPassword = async () => {\n    if (!verified) {\n      alert('⚠️ Please verify your OTP first.');\n      return;\n    }\n    const csrfToken = getCSRFToken();\n    if (!csrfToken) {\n      alert('❌ CSRF Token missing. Please refresh and try again.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/auth/reset-password/', {\n        user_identifier: userIdentifier,\n        new_password: newPassword\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        withCredentials: true\n      });\n      if (response.data.success) {\n        alert('✅ Password reset successful! Redirecting to login...');\n        navigate('/login'); // ✅ Redirect to login page\n      } else {\n        alert('❌ Failed to reset password: ' + response.data.message);\n      }\n    } catch (error) {\n      alert('❌ Error resetting password.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your email or phone number\",\n      value: userIdentifier,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOTP,\n      disabled: loading,\n      children: loading ? 'Sending OTP...' : 'Send OTP'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOTP(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOTP,\n        disabled: loading,\n        children: loading ? 'Verifying...' : 'Verify OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), verified && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPassword,\n          disabled: loading,\n          children: loading ? 'Resetting...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remembered your password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"Jez7fJkghwfH47FjrcDa8Pu1h9Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","sendOTP","verifyOTP","getCSRFToken","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","navigate","userIdentifier","setUserIdentifier","otp","setOTP","newPassword","setNewPassword","otpSent","setOtpSent","verified","setVerified","loading","setLoading","handleChange","e","target","value","handleSendOTP","response","success","alert","message","error","handleVerifyOTP","handleResetPassword","csrfToken","post","user_identifier","new_password","headers","withCredentials","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","disabled","href","_c","$RefreshReg$"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nimport { sendOTP, verifyOTP, getCSRFToken } from '../auth/AuthUtils';\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [userIdentifier, setUserIdentifier] = useState('');\n  const [otp, setOTP] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // ✅ Handle Input Change\n  const handleChange = (e) => {\n    setUserIdentifier(e.target.value);\n  };\n\n  // ✅ Send OTP\n  const handleSendOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await sendOTP(userIdentifier);\n      if (response.success) {\n        alert('✅ OTP sent successfully!');\n        setOtpSent(true);\n      } else {\n        alert('❌ Failed to send OTP: ' + response.message);\n      }\n    } catch (error) {\n      alert('❌ Error sending OTP');\n    }\n    setLoading(false);\n  };\n\n  // ✅ Verify OTP\n  const handleVerifyOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await verifyOTP(userIdentifier, otp);\n      if (response.success) {\n        alert('✅ OTP verified successfully!');\n        setVerified(true);\n      } else {\n        alert('❌ Invalid OTP');\n      }\n    } catch (error) {\n      alert('❌ Error verifying OTP');\n    }\n    setLoading(false);\n  };\n\n  // ✅ Reset Password\n  const handleResetPassword = async () => {\n    if (!verified) {\n      alert('⚠️ Please verify your OTP first.');\n      return;\n    }\n\n    const csrfToken = getCSRFToken();\n    if (!csrfToken) {\n      alert('❌ CSRF Token missing. Please refresh and try again.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(\n        'http://127.0.0.1:8000/api/auth/reset-password/',\n        {\n          user_identifier: userIdentifier,\n          new_password: newPassword,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n\n      if (response.data.success) {\n        alert('✅ Password reset successful! Redirecting to login...');\n        navigate('/login'); // ✅ Redirect to login page\n      } else {\n        alert('❌ Failed to reset password: ' + response.data.message);\n      }\n    } catch (error) {\n      alert('❌ Error resetting password.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Forgot Password</h2>\n\n      {/* Step 1: Enter Email or Phone */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter your email or phone number\"\n        value={userIdentifier}\n        onChange={handleChange}\n        required\n      />\n\n      {!otpSent ? (\n        <button onClick={handleSendOTP} disabled={loading}>\n          {loading ? 'Sending OTP...' : 'Send OTP'}\n        </button>\n      ) : (\n        <>\n          {/* Step 2: Enter OTP */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter OTP\"\n            value={otp}\n            onChange={(e) => setOTP(e.target.value)}\n            required\n          />\n          <button onClick={handleVerifyOTP} disabled={loading}>\n            {loading ? 'Verifying...' : 'Verify OTP'}\n          </button>\n\n          {/* Step 3: Reset Password */}\n          {verified && (\n            <>\n              <input\n                type=\"password\"\n                placeholder=\"Enter new password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                required\n              />\n              <button onClick={handleResetPassword} disabled={loading}>\n                {loading ? 'Resetting...' : 'Reset Password'}\n              </button>\n            </>\n          )}\n        </>\n      )}\n\n      {/* Link to login */}\n      <p>\n        Remembered your password? <a href=\"/login\">Login</a>\n      </p>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}