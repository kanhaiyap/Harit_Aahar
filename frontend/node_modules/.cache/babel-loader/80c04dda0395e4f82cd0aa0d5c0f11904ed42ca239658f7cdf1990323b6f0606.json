{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ManageUsers=()=>{const[users,setUsers]=useState([]);const[expandedRows,setExpandedRows]=useState([]);useEffect(()=>{fetch('/api/users/').then(response=>response.json()).then(data=>setUsers(data)).catch(error=>console.error('Error fetching users:',error));},[]);const toggleRowExpansion=index=>{setExpandedRows(prev=>prev.includes(index)?prev.filter(i=>i!==index):[...prev,index]);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Users\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Phone Number\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Gender\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.map((user,index)=>/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>toggleRowExpansion(index),children:[/*#__PURE__*/_jsx(\"td\",{children:user.username}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.phone_number}),/*#__PURE__*/_jsx(\"td\",{children:user.gender}),expandedRows.includes(index)&&/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{colSpan:\"4\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Primary Address:\"}),\" \",user.primary_address||'N/A',/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Created At:\"}),\" \",user.created_at,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Updated At:\"}),\" \",user.updated_at]})})]},index))})]})]});};export default ManageUsers;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","ManageUsers","users","setUsers","expandedRows","setExpandedRows","fetch","then","response","json","data","catch","error","console","toggleRowExpansion","index","prev","includes","filter","i","children","map","user","onClick","username","email","phone_number","gender","colSpan","primary_address","created_at","updated_at"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/services/ManageUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ManageUsers = () => {\n  const [users, setUsers] = useState([]);\n  const [expandedRows, setExpandedRows] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/users/')\n      .then(response => response.json())\n      .then(data => setUsers(data))\n      .catch(error => console.error('Error fetching users:', error));\n  }, []);\n\n  const toggleRowExpansion = (index) => {\n    setExpandedRows(prev =>\n      prev.includes(index) ? prev.filter(i => i !== index) : [...prev, index]\n    );\n  };\n\n  return (\n    <div>\n      <h1>Manage Users</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Phone Number</th>\n            <th>Gender</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user, index) => (\n            <tr key={index} onClick={() => toggleRowExpansion(index)}>\n              <td>{user.username}</td>\n              <td>{user.email}</td>\n              <td>{user.phone_number}</td>\n              <td>{user.gender}</td>\n              {expandedRows.includes(index) && (\n                <tr>\n                  <td colSpan=\"4\">\n                    <strong>Primary Address:</strong> {user.primary_address || 'N/A'}<br />\n                    <strong>Created At:</strong> {user.created_at}<br />\n                    <strong>Updated At:</strong> {user.updated_at}\n                  </td>\n                </tr>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageUsers;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACQ,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACdW,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,EAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,EAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,EAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAAC,CAClE,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,kBAAkB,CAAIC,KAAK,EAAK,CACpCV,eAAe,CAACW,IAAI,EAClBA,IAAI,CAACC,QAAQ,CAACF,KAAK,CAAC,CAAGC,IAAI,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,GAAKJ,KAAK,CAAC,CAAG,CAAC,GAAGC,IAAI,CAAED,KAAK,CACxE,CAAC,CACH,CAAC,CAED,mBACEf,KAAA,QAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBpB,KAAA,UAAAoB,QAAA,eACEtB,IAAA,UAAAsB,QAAA,cACEpB,KAAA,OAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBtB,IAAA,OAAAsB,QAAA,CAAI,OAAK,CAAI,CAAC,cACdtB,IAAA,OAAAsB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBtB,IAAA,OAAAsB,QAAA,CAAI,QAAM,CAAI,CAAC,EACb,CAAC,CACA,CAAC,cACRtB,IAAA,UAAAsB,QAAA,CACGlB,KAAK,CAACmB,GAAG,CAAC,CAACC,IAAI,CAAEP,KAAK,gBACrBf,KAAA,OAAgBuB,OAAO,CAAEA,CAAA,GAAMT,kBAAkB,CAACC,KAAK,CAAE,CAAAK,QAAA,eACvDtB,IAAA,OAAAsB,QAAA,CAAKE,IAAI,CAACE,QAAQ,CAAK,CAAC,cACxB1B,IAAA,OAAAsB,QAAA,CAAKE,IAAI,CAACG,KAAK,CAAK,CAAC,cACrB3B,IAAA,OAAAsB,QAAA,CAAKE,IAAI,CAACI,YAAY,CAAK,CAAC,cAC5B5B,IAAA,OAAAsB,QAAA,CAAKE,IAAI,CAACK,MAAM,CAAK,CAAC,CACrBvB,YAAY,CAACa,QAAQ,CAACF,KAAK,CAAC,eAC3BjB,IAAA,OAAAsB,QAAA,cACEpB,KAAA,OAAI4B,OAAO,CAAC,GAAG,CAAAR,QAAA,eACbtB,IAAA,WAAAsB,QAAA,CAAQ,kBAAgB,CAAQ,CAAC,IAAC,CAACE,IAAI,CAACO,eAAe,EAAI,KAAK,cAAC/B,IAAA,QAAK,CAAC,cACvEA,IAAA,WAAAsB,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAACE,IAAI,CAACQ,UAAU,cAAChC,IAAA,QAAK,CAAC,cACpDA,IAAA,WAAAsB,QAAA,CAAQ,aAAW,CAAQ,CAAC,IAAC,CAACE,IAAI,CAACS,UAAU,EAC3C,CAAC,CACH,CACL,GAbMhB,KAcL,CACL,CAAC,CACG,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}