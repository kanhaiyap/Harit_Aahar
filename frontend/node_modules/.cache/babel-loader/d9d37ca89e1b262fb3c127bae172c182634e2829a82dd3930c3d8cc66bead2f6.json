{"ast":null,"code":"import React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ManageAddresses=()=>{const[addresses,setAddresses]=useState([]);const[expandedRows,setExpandedRows]=useState([]);useEffect(()=>{fetch('/api/addresses/').then(response=>response.json()).then(data=>setAddresses(data)).catch(error=>console.error('Error fetching addresses:',error));},[]);const toggleRowExpansion=index=>{setExpandedRows(prev=>prev.includes(index)?prev.filter(i=>i!==index):[...prev,index]);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Manage Addresses\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"User\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Address Line 1\"}),/*#__PURE__*/_jsx(\"th\",{children:\"City\"}),/*#__PURE__*/_jsx(\"th\",{children:\"State\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Postal Code\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:addresses.map((address,index)=>/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>toggleRowExpansion(index),children:[/*#__PURE__*/_jsx(\"td\",{children:address.user}),/*#__PURE__*/_jsx(\"td\",{children:address.address_line1}),/*#__PURE__*/_jsx(\"td\",{children:address.city}),/*#__PURE__*/_jsx(\"td\",{children:address.state}),/*#__PURE__*/_jsx(\"td\",{children:address.postal_code}),expandedRows.includes(index)&&/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(\"td\",{colSpan:\"5\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Address Line 2:\"}),\" \",address.address_line2||'N/A',/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Country:\"}),\" \",address.country,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Phone:\"}),\" \",address.phone_number]})})]},index))})]})]});};export default ManageAddresses;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","ManageAddresses","addresses","setAddresses","expandedRows","setExpandedRows","fetch","then","response","json","data","catch","error","console","toggleRowExpansion","index","prev","includes","filter","i","children","map","address","onClick","user","address_line1","city","state","postal_code","colSpan","address_line2","country","phone_number"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/services/ManageInventoryLogs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ManageAddresses = () => {\n  const [addresses, setAddresses] = useState([]);\n  const [expandedRows, setExpandedRows] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/addresses/')\n      .then(response => response.json())\n      .then(data => setAddresses(data))\n      .catch(error => console.error('Error fetching addresses:', error));\n  }, []);\n\n  const toggleRowExpansion = (index) => {\n    setExpandedRows(prev =>\n      prev.includes(index) ? prev.filter(i => i !== index) : [...prev, index]\n    );\n  };\n\n  return (\n    <div>\n      <h1>Manage Addresses</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>User</th>\n            <th>Address Line 1</th>\n            <th>City</th>\n            <th>State</th>\n            <th>Postal Code</th>\n          </tr>\n        </thead>\n        <tbody>\n          {addresses.map((address, index) => (\n            <tr key={index} onClick={() => toggleRowExpansion(index)}>\n              <td>{address.user}</td>\n              <td>{address.address_line1}</td>\n              <td>{address.city}</td>\n              <td>{address.state}</td>\n              <td>{address.postal_code}</td>\n              {expandedRows.includes(index) && (\n                <tr>\n                  <td colSpan=\"5\">\n                    <strong>Address Line 2:</strong> {address.address_line2 || 'N/A'}<br />\n                    <strong>Country:</strong> {address.country}<br />\n                    <strong>Phone:</strong> {address.phone_number}\n                  </td>\n                </tr>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ManageAddresses;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}