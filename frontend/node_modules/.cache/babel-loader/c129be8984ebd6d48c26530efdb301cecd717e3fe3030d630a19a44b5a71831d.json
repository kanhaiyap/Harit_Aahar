{"ast":null,"code":"var _jsxFileName = \"/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { sendOTP, verifyOTP, getCSRFToken } from '../auth/AuthUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [userIdentifier, setUserIdentifier] = useState('');\n  const [otp, setOTP] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // ‚úÖ Handle Input Change\n  const handleChange = e => {\n    setUserIdentifier(e.target.value);\n  };\n  const handleSendOTP = async () => {\n    setLoading(true);\n    console.log('üöÄ Sending OTP request for:', userIdentifier);\n    try {\n      const csrfToken = getCSRFToken();\n      console.log('‚úÖ CSRF Token:', csrfToken); // Debugging CSRF Token\n\n      const response = await axios.post('http://127.0.0.1:8000/api/auth/send-otp/', {\n        phone_number: userIdentifier\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        withCredentials: true\n      });\n      console.log('üéâ OTP Sent Response:', response.data);\n      if (response.data.success) {\n        alert('‚úÖ OTP sent successfully!');\n        setOtpSent(true);\n      } else {\n        alert('‚ùå Failed to send OTP: ' + response.data.message);\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('üî• Error sending OTP:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert('‚ùå Error sending OTP. Check console for details.');\n    }\n    setLoading(false);\n  };\n\n  // ‚úÖ Verify OTP\n  const handleVerifyOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await verifyOTP(userIdentifier, otp);\n      if (response.success) {\n        alert('‚úÖ OTP verified successfully!');\n        setVerified(true);\n      } else {\n        alert('‚ùå Invalid OTP');\n      }\n    } catch (error) {\n      alert('‚ùå Error verifying OTP');\n    }\n    setLoading(false);\n  };\n\n  // ‚úÖ Reset Password\n  const handleResetPassword = async () => {\n    if (!verified) {\n      alert('‚ö†Ô∏è Please verify your OTP first.');\n      return;\n    }\n    const csrfToken = await getCSRFToken();\n    if (!csrfToken) {\n      alert('‚ùå CSRF Token missing. Please refresh and try again.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/api/auth/reset-password/', {\n        user_identifier: userIdentifier,\n        new_password: newPassword\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrfToken\n        },\n        withCredentials: true\n      });\n      if (response.data.success) {\n        alert('‚úÖ Password reset successful! Redirecting to login...');\n        navigate('/login'); // ‚úÖ Redirect to login page\n      } else {\n        alert('‚ùå Failed to reset password: ' + response.data.message);\n      }\n    } catch (error) {\n      alert('‚ùå Error resetting password.');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your email or phone number\",\n      value: userIdentifier,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOTP,\n      disabled: loading,\n      children: loading ? 'Sending OTP...' : 'Send OTP'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOTP(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOTP,\n        disabled: loading,\n        children: loading ? 'Verifying...' : 'Verify OTP'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), verified && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter new password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetPassword,\n          disabled: loading,\n          children: loading ? 'Resetting...' : 'Reset Password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Remembered your password? \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"Jez7fJkghwfH47FjrcDa8Pu1h9Y=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","useNavigate","sendOTP","verifyOTP","getCSRFToken","jsxDEV","_jsxDEV","Fragment","_Fragment","ForgotPassword","_s","navigate","userIdentifier","setUserIdentifier","otp","setOTP","newPassword","setNewPassword","otpSent","setOtpSent","verified","setVerified","loading","setLoading","handleChange","e","target","value","handleSendOTP","console","log","csrfToken","response","post","phone_number","headers","withCredentials","data","success","alert","message","error","_error$response","handleVerifyOTP","handleResetPassword","user_identifier","new_password","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","disabled","href","_c","$RefreshReg$"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nimport { sendOTP, verifyOTP, getCSRFToken } from '../auth/AuthUtils';\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [userIdentifier, setUserIdentifier] = useState('');\n  const [otp, setOTP] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // ‚úÖ Handle Input Change\n  const handleChange = (e) => {\n    setUserIdentifier(e.target.value);\n  };\n  const handleSendOTP = async () => {\n    setLoading(true);\n    console.log('üöÄ Sending OTP request for:', userIdentifier);\n  \n    try {\n      const csrfToken = getCSRFToken();\n      console.log('‚úÖ CSRF Token:', csrfToken); // Debugging CSRF Token\n  \n      const response = await axios.post(\n        'http://127.0.0.1:8000/api/auth/send-otp/',\n        { phone_number: userIdentifier },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n  \n      console.log('üéâ OTP Sent Response:', response.data);\n  \n      if (response.data.success) {\n        alert('‚úÖ OTP sent successfully!');\n        setOtpSent(true);\n      } else {\n        alert('‚ùå Failed to send OTP: ' + response.data.message);\n      }\n    } catch (error) {\n      console.error('üî• Error sending OTP:', error.response?.data || error);\n      alert('‚ùå Error sending OTP. Check console for details.');\n    }\n  \n    setLoading(false);\n  };\n  \n  // ‚úÖ Verify OTP\n  const handleVerifyOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await verifyOTP(userIdentifier, otp);\n      if (response.success) {\n        alert('‚úÖ OTP verified successfully!');\n        setVerified(true);\n      } else {\n        alert('‚ùå Invalid OTP');\n      }\n    } catch (error) {\n      alert('‚ùå Error verifying OTP');\n    }\n    setLoading(false);\n  };\n\n  // ‚úÖ Reset Password\n  const handleResetPassword = async () => {\n    if (!verified) {\n      alert('‚ö†Ô∏è Please verify your OTP first.');\n      return;\n    }\n\n    const csrfToken =await getCSRFToken();\n    if (!csrfToken) {\n      alert('‚ùå CSRF Token missing. Please refresh and try again.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(\n        'http://127.0.0.1:8000/api/auth/reset-password/',\n        {\n          user_identifier: userIdentifier,\n          new_password: newPassword,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n\n      if (response.data.success) {\n        alert('‚úÖ Password reset successful! Redirecting to login...');\n        navigate('/login'); // ‚úÖ Redirect to login page\n      } else {\n        alert('‚ùå Failed to reset password: ' + response.data.message);\n      }\n    } catch (error) {\n      alert('‚ùå Error resetting password.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Forgot Password</h2>\n\n      {/* Step 1: Enter Email or Phone */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter your email or phone number\"\n        value={userIdentifier}\n        onChange={handleChange}\n        required\n      />\n\n      {!otpSent ? (\n        <button onClick={handleSendOTP} disabled={loading}>\n          {loading ? 'Sending OTP...' : 'Send OTP'}\n        </button>\n      ) : (\n        <>\n          {/* Step 2: Enter OTP */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter OTP\"\n            value={otp}\n            onChange={(e) => setOTP(e.target.value)}\n            required\n          />\n          <button onClick={handleVerifyOTP} disabled={loading}>\n            {loading ? 'Verifying...' : 'Verify OTP'}\n          </button>\n\n          {/* Step 3: Reset Password */}\n          {verified && (\n            <>\n              <input\n                type=\"password\"\n                placeholder=\"Enter new password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                required\n              />\n              <button onClick={handleResetPassword} disabled={loading}>\n                {loading ? 'Resetting...' : 'Reset Password'}\n              </button>\n            </>\n          )}\n        </>\n      )}\n\n      {/* Link to login */}\n      <p>\n        Remembered your password? <a href=\"/login\">Login</a>\n      </p>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}