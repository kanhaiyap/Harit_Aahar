{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{sendOTP,verifyOTP,getCSRFToken}from'../auth/AuthUtils';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||\"http://127.0.0.1:8000\";const ForgotPassword=()=>{const navigate=useNavigate();const[userIdentifier,setUserIdentifier]=useState('');const[otp,setOTP]=useState('');const[newPassword,setNewPassword]=useState('');const[otpSent,setOtpSent]=useState(false);const[verified,setVerified]=useState(false);const[loading,setLoading]=useState(false);// ‚úÖ Handle Input Change\nconst handleChange=e=>{setUserIdentifier(e.target.value);};const handleSendOTP=async()=>{setLoading(true);console.log('üöÄ Sending OTP request for:',userIdentifier);try{const csrfToken=getCSRFToken();console.log('‚úÖ CSRF Token:',csrfToken);// Debugging CSRF Token\nconst response=await axios.post(`${API_BASE_URL}/api/auth/send-otp/`,{phone_number:userIdentifier},{headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken},withCredentials:true});console.log('üéâ OTP Sent Response:',response.data);if(response.data.success){alert('‚úÖ OTP sent successfully!');setOtpSent(true);}else{alert('‚ùå Failed to send OTP: '+response.data.message);}}catch(error){var _error$response;console.error('üî• Error sending OTP:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error);alert('‚ùå Error sending OTP. Check console for details.');}setLoading(false);};// ‚úÖ Verify OTP\nconst handleVerifyOTP=async()=>{setLoading(true);try{const response=await verifyOTP(userIdentifier,otp);if(response.success){alert('‚úÖ OTP verified successfully!');setVerified(true);}else{alert('‚ùå Invalid OTP');}}catch(error){alert('‚ùå Error verifying OTP');}setLoading(false);};// ‚úÖ Reset Password\nconst handleResetPassword=async()=>{if(!verified){alert('‚ö†Ô∏è Please verify your OTP first.');return;}const csrfToken=await getCSRFToken();if(!csrfToken){alert('‚ùå CSRF Token missing. Please refresh and try again.');return;}setLoading(true);try{const response=await axios.post(`${API_BASE_URL}/api/auth/reset-password/`,{user_identifier:userIdentifier,new_password:newPassword},{headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken},withCredentials:true});if(response.data.success){alert('‚úÖ Password reset successful! Redirecting to login...');navigate('/login');// ‚úÖ Redirect to login page\n}else{alert('‚ùå Failed to reset password: '+response.data.message);}}catch(error){alert('‚ùå Error resetting password.');}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Forgot Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your email or phone number\",value:userIdentifier,onChange:handleChange,required:true}),!otpSent?/*#__PURE__*/_jsx(\"button\",{onClick:handleSendOTP,disabled:loading,children:loading?'Sending OTP...':'Send OTP'}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOTP(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleVerifyOTP,disabled:loading,children:loading?'Verifying...':'Verify OTP'}),verified&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter new password\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleResetPassword,disabled:loading,children:loading?'Resetting...':'Reset Password'})]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Remembered your password? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",children:\"Login\"})]})]});};export default ForgotPassword;","map":{"version":3,"names":["React","useState","axios","useNavigate","sendOTP","verifyOTP","getCSRFToken","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","ForgotPassword","navigate","userIdentifier","setUserIdentifier","otp","setOTP","newPassword","setNewPassword","otpSent","setOtpSent","verified","setVerified","loading","setLoading","handleChange","e","target","value","handleSendOTP","console","log","csrfToken","response","post","phone_number","headers","withCredentials","data","success","alert","message","error","_error$response","handleVerifyOTP","handleResetPassword","user_identifier","new_password","className","children","type","placeholder","onChange","required","onClick","disabled","href"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/Harit_Aahar/frontend/src/auth/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nimport { sendOTP, verifyOTP, getCSRFToken } from '../auth/AuthUtils';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:8000\";\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [userIdentifier, setUserIdentifier] = useState('');\n  const [otp, setOTP] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [otpSent, setOtpSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // ‚úÖ Handle Input Change\n  const handleChange = (e) => {\n    setUserIdentifier(e.target.value);\n  };\n  const handleSendOTP = async () => {\n    setLoading(true);\n    console.log('üöÄ Sending OTP request for:', userIdentifier);\n  \n    try {\n      const csrfToken = getCSRFToken();\n      console.log('‚úÖ CSRF Token:', csrfToken); // Debugging CSRF Token\n  \n      const response = await axios.post(\n        `${API_BASE_URL}/api/auth/send-otp/`,\n        { phone_number: userIdentifier },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n  \n      console.log('üéâ OTP Sent Response:', response.data);\n  \n      if (response.data.success) {\n        alert('‚úÖ OTP sent successfully!');\n        setOtpSent(true);\n      } else {\n        alert('‚ùå Failed to send OTP: ' + response.data.message);\n      }\n    } catch (error) {\n      console.error('üî• Error sending OTP:', error.response?.data || error);\n      alert('‚ùå Error sending OTP. Check console for details.');\n    }\n  \n    setLoading(false);\n  };\n  \n  // ‚úÖ Verify OTP\n  const handleVerifyOTP = async () => {\n    setLoading(true);\n    try {\n      const response = await verifyOTP(userIdentifier, otp);\n      if (response.success) {\n        alert('‚úÖ OTP verified successfully!');\n        setVerified(true);\n      } else {\n        alert('‚ùå Invalid OTP');\n      }\n    } catch (error) {\n      alert('‚ùå Error verifying OTP');\n    }\n    setLoading(false);\n  };\n\n  // ‚úÖ Reset Password\n  const handleResetPassword = async () => {\n    if (!verified) {\n      alert('‚ö†Ô∏è Please verify your OTP first.');\n      return;\n    }\n\n    const csrfToken =await getCSRFToken();\n    if (!csrfToken) {\n      alert('‚ùå CSRF Token missing. Please refresh and try again.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/api/auth/reset-password/`,\n        {\n          user_identifier: userIdentifier,\n          new_password: newPassword,\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n\n      if (response.data.success) {\n        alert('‚úÖ Password reset successful! Redirecting to login...');\n        navigate('/login'); // ‚úÖ Redirect to login page\n      } else {\n        alert('‚ùå Failed to reset password: ' + response.data.message);\n      }\n    } catch (error) {\n      alert('‚ùå Error resetting password.');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Forgot Password</h2>\n\n      {/* Step 1: Enter Email or Phone */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter your email or phone number\"\n        value={userIdentifier}\n        onChange={handleChange}\n        required\n      />\n\n      {!otpSent ? (\n        <button onClick={handleSendOTP} disabled={loading}>\n          {loading ? 'Sending OTP...' : 'Send OTP'}\n        </button>\n      ) : (\n        <>\n          {/* Step 2: Enter OTP */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter OTP\"\n            value={otp}\n            onChange={(e) => setOTP(e.target.value)}\n            required\n          />\n          <button onClick={handleVerifyOTP} disabled={loading}>\n            {loading ? 'Verifying...' : 'Verify OTP'}\n          </button>\n\n          {/* Step 3: Reset Password */}\n          {verified && (\n            <>\n              <input\n                type=\"password\"\n                placeholder=\"Enter new password\"\n                value={newPassword}\n                onChange={(e) => setNewPassword(e.target.value)}\n                required\n              />\n              <button onClick={handleResetPassword} disabled={loading}>\n                {loading ? 'Resetting...' : 'Reset Password'}\n              </button>\n            </>\n          )}\n        </>\n      )}\n\n      {/* Link to login */}\n      <p>\n        Remembered your password? <a href=\"/login\">Login</a>\n      </p>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}