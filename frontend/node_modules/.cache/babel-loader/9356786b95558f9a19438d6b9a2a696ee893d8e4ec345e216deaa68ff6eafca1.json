{"ast":null,"code":"import axios from 'axios';\nfunction getCSRFToken() {\n  const match = document.cookie.match(/csrftoken=([^;]+)/);\n  return match ? match[1] : '';\n}\n\n// Function to send OTP via Twilio WhatsApp API\n// Function to send OTP\nexport function sendOTP(phone_number) {\n  const csrfToken = getCSRFToken(); // Get CSRF token\n\n  return axios.post('/api/auth/send_otp/', {\n    phone_number\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken // Include CSRF token in headers\n    },\n    withCredentials: true // Important to include cookies in request\n  }).then(response => response.data).catch(error => {\n    console.error('Error sending OTP:', error);\n    throw error;\n  });\n}\n\n// Function to verify OTP\nexport const verifyOTP = async (phoneNumber, otp) => {\n  try {\n    const response = await axios.post('/api/auth/verify_otp/', {\n      phone_number: phoneNumber,\n      otp\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error verifying OTP:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","getCSRFToken","match","document","cookie","sendOTP","phone_number","csrfToken","post","headers","withCredentials","then","response","data","catch","error","console","verifyOTP","phoneNumber","otp"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/AuthUtils.js"],"sourcesContent":["import axios from 'axios';\n\n\nfunction getCSRFToken() {\n    const match = document.cookie.match(/csrftoken=([^;]+)/);\n    return match ? match[1] : '';\n  }\n  \n// Function to send OTP via Twilio WhatsApp API\n// Function to send OTP\nexport function sendOTP(phone_number) {\n  const csrfToken = getCSRFToken();  // Get CSRF token\n\n  return axios.post('/api/auth/send_otp/', { phone_number }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken  // Include CSRF token in headers\n    },\n    withCredentials: true  // Important to include cookies in request\n  })\n  .then(response => response.data)\n  .catch(error => {\n    console.error('Error sending OTP:', error);\n    throw error;\n  });\n}\n\n// Function to verify OTP\nexport const verifyOTP = async (phoneNumber, otp) => {\n  try {\n    const response = await axios.post('/api/auth/verify_otp/', { phone_number: phoneNumber, otp });\n    return response.data;\n  } catch (error) {\n    console.error('Error verifying OTP:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,YAAYA,CAAA,EAAG;EACpB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,MAAM,CAACF,KAAK,CAAC,mBAAmB,CAAC;EACxD,OAAOA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;AAC9B;;AAEF;AACA;AACA,OAAO,SAASG,OAAOA,CAACC,YAAY,EAAE;EACpC,MAAMC,SAAS,GAAGN,YAAY,CAAC,CAAC,CAAC,CAAE;;EAEnC,OAAOD,KAAK,CAACQ,IAAI,CAAC,qBAAqB,EAAE;IAAEF;EAAa,CAAC,EAAE;IACzDG,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,aAAa,EAAEF,SAAS,CAAE;IAC5B,CAAC;IACDG,eAAe,EAAE,IAAI,CAAE;EACzB,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAI;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb,CAAC,CAAC;AACJ;;AAEA;AACA,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAOC,WAAW,EAAEC,GAAG,KAAK;EACnD,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMZ,KAAK,CAACQ,IAAI,CAAC,uBAAuB,EAAE;MAAEF,YAAY,EAAEY,WAAW;MAAEC;IAAI,CAAC,CAAC;IAC9F,OAAOP,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}