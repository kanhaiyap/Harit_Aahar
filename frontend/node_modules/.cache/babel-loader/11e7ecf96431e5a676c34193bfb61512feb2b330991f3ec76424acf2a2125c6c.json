{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{useNavigate}from'react-router-dom';import{getCSRFToken,sendOTP,verifyOTP}from'../auth/AuthUtils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||\"http://127.0.0.1:8000\";// Ensure axios sends cookies with every request globally.\naxios.defaults.withCredentials=true;const Login=()=>{const[userInfo,setUserInfo]=useState({phone:'',password:''});const[otp,setOTP]=useState('');// stage: 'credentials' (initial) or 'otp' (OTP sent & awaiting verification)\nconst[stage,setStage]=useState('credentials');const[csrfToken,setCsrfToken]=useState(null);const navigate=useNavigate();// Prefetch CSRF cookie on mount.\nuseEffect(()=>{const fetchCsrf=async()=>{const token=await getCSRFToken();setCsrfToken(token);console.log(\"Prefetched CSRF Token:\",token);};fetchCsrf();},[]);const handleChange=e=>{const{name,value}=e.target;setUserInfo(prev=>({...prev,[name]:value}));};// Step 1: Check credentials via the regular login endpoint.\n// If valid, automatically send OTP.\nconst handleSendOTP=async()=>{if(!userInfo.phone||!userInfo.password){alert(\"Please enter both phone number and password.\");return;}if(!csrfToken){alert(\"CSRF Token not available. Please refresh the page.\");return;}try{// Check credentials.\nconst credResponse=await axios.post(`${API_BASE_URL}/api/auth/login/`,{username:userInfo.phone,password:userInfo.password},{headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":csrfToken}});if(!credResponse.data.success){alert(\"Incorrect phone number or password. Please enter the correct password.\");return;}// Credentials valid; now send OTP.\nconst otpResponse=await sendOTP(userInfo.phone);if(otpResponse.success){alert(\"✅ OTP sent successfully!\");setStage('otp');}else{alert(\"❌ Failed to send OTP: \"+otpResponse.message);}}catch(error){var _error$response;console.error(\"Error during credential check or sending OTP:\",((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error);alert(\"Error during credential check or sending OTP. Check console for details.\");}};// Step 2: Verify OTP and complete login.\n// We call the same login endpoint and include the OTP in the payload.\nconst handleOTPLogin=async()=>{if(!otp){alert(\"Please enter the OTP.\");return;}if(!csrfToken){alert(\"CSRF Token not available. Please refresh the page.\");return;}try{// First, verify the OTP.\nconst verifyResponse=await verifyOTP(userInfo.phone,otp);if(!verifyResponse.success){alert(\"Invalid OTP. Please try again.\");return;}// OTP verified; now complete login.\nconst loginResponse=await axios.post(`${API_BASE_URL}/api/auth/login/`,{username:userInfo.phone,password:userInfo.password,otp:otp// Pass OTP so backend can handle it accordingly\n},{headers:{\"Content-Type\":\"application/json\",\"X-CSRFToken\":csrfToken}});if(loginResponse.data.success){const userData={name:loginResponse.data.user.name,phone:loginResponse.data.user.phone_number};localStorage.setItem(\"authToken\",loginResponse.data.authToken);localStorage.setItem(\"user\",JSON.stringify(userData));window.dispatchEvent(new Event(\"storage\"));alert(\"✅ Login successful!\");navigate(\"/profile\");}else{alert(\"❌ Login failed: \"+loginResponse.data.message);}}catch(error){var _error$response2;console.error(\"Error during OTP login:\",((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error);alert(\"Error during OTP login. Check console for details.\");}};// Single button handler: if stage is 'credentials', check credentials and send OTP;\n// if stage is 'otp', verify OTP and complete login.\nconst handleButtonClick=async()=>{if(stage==='credentials'){await handleSendOTP();}else if(stage==='otp'){await handleOTPLogin();}};const buttonText=stage==='credentials'?\"Send OTP\":\"Login\";return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",name:\"phone\",placeholder:\"Enter your phone number\",value:userInfo.phone,onChange:handleChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Enter your password\",value:userInfo.password,onChange:handleChange,required:true}),stage==='otp'&&/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOTP(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleButtonClick,children:buttonText}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/signup'),children:\"Signup\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/forgot-password'),children:\"Forgot Password?\"})]});};export default Login;","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","getCSRFToken","sendOTP","verifyOTP","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","defaults","withCredentials","Login","userInfo","setUserInfo","phone","password","otp","setOTP","stage","setStage","csrfToken","setCsrfToken","navigate","fetchCsrf","token","console","log","handleChange","e","name","value","target","prev","handleSendOTP","alert","credResponse","post","username","headers","data","success","otpResponse","message","error","_error$response","response","handleOTPLogin","verifyResponse","loginResponse","userData","user","phone_number","localStorage","setItem","authToken","JSON","stringify","window","dispatchEvent","Event","_error$response2","handleButtonClick","buttonText","className","children","type","placeholder","onChange","required","onClick"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/Harit_Aahar/frontend/src/auth/Login.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { getCSRFToken, sendOTP, verifyOTP } from '../auth/AuthUtils';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://127.0.0.1:8000\";\n// Ensure axios sends cookies with every request globally.\naxios.defaults.withCredentials = true;\n\nconst Login = () => {\n  const [userInfo, setUserInfo] = useState({ phone: '', password: '' });\n  const [otp, setOTP] = useState('');\n  // stage: 'credentials' (initial) or 'otp' (OTP sent & awaiting verification)\n  const [stage, setStage] = useState('credentials');\n  const [csrfToken, setCsrfToken] = useState(null);\n  const navigate = useNavigate();\n\n  // Prefetch CSRF cookie on mount.\n  useEffect(() => {\n    const fetchCsrf = async () => {\n      const token = await getCSRFToken();\n      setCsrfToken(token);\n      console.log(\"Prefetched CSRF Token:\", token);\n    };\n    fetchCsrf();\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserInfo(prev => ({ ...prev, [name]: value }));\n  };\n\n  // Step 1: Check credentials via the regular login endpoint.\n  // If valid, automatically send OTP.\n  const handleSendOTP = async () => {\n    if (!userInfo.phone || !userInfo.password) {\n      alert(\"Please enter both phone number and password.\");\n      return;\n    }\n    if (!csrfToken) {\n      alert(\"CSRF Token not available. Please refresh the page.\");\n      return;\n    }\n    try {\n      // Check credentials.\n      const credResponse = await axios.post(\n        `${API_BASE_URL}/api/auth/login/`,\n        {\n          username: userInfo.phone,\n          password: userInfo.password,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n        }\n      );\n      if (!credResponse.data.success) {\n        alert(\"Incorrect phone number or password. Please enter the correct password.\");\n        return;\n      }\n      // Credentials valid; now send OTP.\n      const otpResponse = await sendOTP(userInfo.phone);\n      if (otpResponse.success) {\n        alert(\"✅ OTP sent successfully!\");\n        setStage('otp');\n      } else {\n        alert(\"❌ Failed to send OTP: \" + otpResponse.message);\n      }\n    } catch (error) {\n      console.error(\"Error during credential check or sending OTP:\", error.response?.data || error);\n      alert(\"Error during credential check or sending OTP. Check console for details.\");\n    }\n  };\n\n  // Step 2: Verify OTP and complete login.\n  // We call the same login endpoint and include the OTP in the payload.\n  const handleOTPLogin = async () => {\n    if (!otp) {\n      alert(\"Please enter the OTP.\");\n      return;\n    }\n    if (!csrfToken) {\n      alert(\"CSRF Token not available. Please refresh the page.\");\n      return;\n    }\n    try {\n      // First, verify the OTP.\n      const verifyResponse = await verifyOTP(userInfo.phone, otp);\n      if (!verifyResponse.success) {\n        alert(\"Invalid OTP. Please try again.\");\n        return;\n      }\n      // OTP verified; now complete login.\n      const loginResponse = await axios.post(\n        `${API_BASE_URL}/api/auth/login/`,\n        {\n          username: userInfo.phone,\n          password: userInfo.password,\n          otp: otp, // Pass OTP so backend can handle it accordingly\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n        }\n      );\n      if (loginResponse.data.success) {\n        const userData = {\n          name: loginResponse.data.user.name,\n          phone: loginResponse.data.user.phone_number,\n        };\n        localStorage.setItem(\"authToken\", loginResponse.data.authToken);\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        window.dispatchEvent(new Event(\"storage\"));\n        alert(\"✅ Login successful!\");\n        navigate(\"/profile\");\n      } else {\n        alert(\"❌ Login failed: \" + loginResponse.data.message);\n      }\n    } catch (error) {\n      console.error(\"Error during OTP login:\", error.response?.data || error);\n      alert(\"Error during OTP login. Check console for details.\");\n    }\n  };\n\n  // Single button handler: if stage is 'credentials', check credentials and send OTP;\n  // if stage is 'otp', verify OTP and complete login.\n  const handleButtonClick = async () => {\n    if (stage === 'credentials') {\n      await handleSendOTP();\n    } else if (stage === 'otp') {\n      await handleOTPLogin();\n    }\n  };\n\n  const buttonText = stage === 'credentials' ? \"Send OTP\" : \"Login\";\n\n  return (\n    <div className=\"form-container\">\n      <h2>Login</h2>\n      <input \n        type=\"tel\" \n        name=\"phone\" \n        placeholder=\"Enter your phone number\" \n        value={userInfo.phone} \n        onChange={handleChange} \n        required \n      />\n      <input \n        type=\"password\" \n        name=\"password\" \n        placeholder=\"Enter your password\" \n        value={userInfo.password} \n        onChange={handleChange} \n        required \n      />\n      {stage === 'otp' && (\n        <input \n          type=\"text\" \n          placeholder=\"Enter OTP\" \n          value={otp} \n          onChange={(e) => setOTP(e.target.value)} \n          required \n        />\n      )}\n      <button onClick={handleButtonClick}>{buttonText}</button>\n      <button onClick={() => navigate('/signup')}>Signup</button>\n      <button onClick={() => navigate('/forgot-password')}>Forgot Password?</button>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}