{"ast":null,"code":"function getCSRFToken() {\n  var name = 'csrftoken';\n  var value = document.cookie.match('(^|;)\\\\s*' + name + '=([^;]*)');\n  return value ? value.pop() : '';\n}\nlet cart = JSON.parse(localStorage.getItem('cart')) || []; // Load cart from localStorage if it exists, or initialize as an empty array\n\n// Save cart to localStorage whenever it changes\nfunction saveCartToLocalStorage() {\n  localStorage.setItem('cart', JSON.stringify(cart));\n}\n\n// window.onload = function() {\n//     // Clear the localStorage on page load\n//     localStorage.removeItem('cart');\n// };\n\nwindow.addToCart = function (id, name, price, image) {\n  if (!id || !name || !price || !image) {\n    console.error('Error: Missing or invalid product data');\n    return;\n  }\n  let cart = JSON.parse(localStorage.getItem('cart')) || [];\n  const existingItem = cart.find(item => item.id === id);\n  if (existingItem) {\n    existingItem.quantity += 1;\n  } else {\n    const imageName = image.split(\"/\").pop(); // Extracts 'carrot.jpg'\n    const correctedImagePath = `images/products/${imageName}`; // ✅ Convert to correct format\n\n    cart.push({\n      id,\n      name,\n      price: parseFloat(price),\n      quantity: 1,\n      image: correctedImagePath\n    });\n  }\n  localStorage.setItem('cart', JSON.stringify(cart)); // Save cart in localStorage\n  console.log(\"✅ Cart Updated:\", JSON.parse(localStorage.getItem(\"cart\")));\n  updateCartCount(); // Update cart count in the UI\n};\nfunction updateCartCount() {\n  const cart = JSON.parse(localStorage.getItem('cart')) || [];\n  const cartCount = cart.reduce((total, item) => total + item.quantity, 0);\n  const cartCountElement = document.getElementById('cart-count');\n  if (cartCountElement) {\n    cartCountElement.innerText = cartCount;\n  }\n}\n\n// Call this function when the page loads\nwindow.onload = function () {\n  updateCartCount();\n};\nfunction saveChanges() {\n  // Get all the rows from the table\n  const rows = document.querySelectorAll('#productsTable tbody tr');\n  const updatedData = [];\n\n  // Iterate through each row to collect the data\n  rows.forEach(row => {\n    const product = {\n      product_name: row.querySelector('.product_name').value,\n      product_description: row.querySelector('.product_description').value,\n      price: parseFloat(row.querySelector('.price').value),\n      category_name: row.querySelector('.category_name').value,\n      brand: row.querySelector('.brand').value,\n      color: row.querySelector('.color').value,\n      size: row.querySelector('.size').value,\n      quantity: parseInt(row.querySelector('.quantity').value),\n      availability: row.querySelector('.availability').checked,\n      rating: parseFloat(row.querySelector('.rating').value),\n      reviews: parseInt(row.querySelector('.reviews').value),\n      expiry_date: row.querySelector('.expiry_date').value,\n      shipping_cost: parseFloat(row.querySelector('.shipping_cost').value),\n      seller_name: row.querySelector('.seller_name').value,\n      seller_rating: parseFloat(row.querySelector('.seller_rating').value)\n    };\n    updatedData.push(product);\n  });\n\n  // Send data to the server\n  fetch('', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken\n    },\n    body: JSON.stringify({\n      products_data: updatedData\n    })\n  }).then(response => response.json()).then(data => {\n    console.log(\"Server response:\", data);\n    alert(data.message);\n    if (data.success) {\n      location.reload();\n    }\n  }).catch(error => console.error('Error:', error));\n}\nfunction submitCart() {\n  const cartData = JSON.parse(localStorage.getItem('cart')) || [];\n  if (cartData.length === 0) {\n    alert('Your cart is empty!');\n    return;\n  }\n  const csrfToken = getCSRFToken();\n  fetch('/checkout/', {\n    // Adjust to your actual checkout URL\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': csrfToken\n    },\n    body: JSON.stringify({\n      cart_items: cartData\n    })\n  }).then(response => response.json()).then(data => {\n    console.log('Server response:', data);\n    if (data.success) {\n      alert('Cart submitted successfully!');\n      localStorage.removeItem('cart'); // Clear cart if submission is successful\n      // Optionally redirect or refresh the page\n    } else {\n      alert('Failed to submit cart');\n    }\n  }).catch(error => {\n    console.error('Error submitting cart:', error);\n    alert('An error occurred while submitting the cart');\n  });\n}\nfunction addProductRow() {\n  const tableBody = document.querySelector('#productsTable tbody');\n  const newRow = document.createElement('tr');\n  newRow.innerHTML = `\n        <td><input type=\"text\" class=\"product_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"product_description\" value=\"\"></td>\n        <td><input type=\"number\" class=\"price\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"category_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"brand\" value=\"\"></td>\n        <td><input type=\"text\" class=\"color\" value=\"\"></td>\n        <td><input type=\"text\" class=\"size\" value=\"\"></td>\n        <td><input type=\"number\" class=\"quantity\" value=\"\"></td>\n        <td><input type=\"checkbox\" class=\"availability\"></td>\n        <td><input type=\"number\" class=\"rating\" step=\"0.1\" value=\"\"></td>\n        <td><input type=\"number\" class=\"reviews\" value=\"\"></td>\n        <td><input type=\"text\" class=\"expiry_date\" value=\"\"></td>\n        <td><input type=\"number\" class=\"shipping_cost\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"seller_name\" value=\"\"></td>\n        <td><input type=\"number\" class=\"seller_rating\" step=\"0.1\" value=\"\"></td>\n    `;\n  tableBody.appendChild(newRow);\n}","map":{"version":3,"names":["getCSRFToken","name","value","document","cookie","match","pop","cart","JSON","parse","localStorage","getItem","saveCartToLocalStorage","setItem","stringify","window","addToCart","id","price","image","console","error","existingItem","find","item","quantity","imageName","split","correctedImagePath","push","parseFloat","log","updateCartCount","cartCount","reduce","total","cartCountElement","getElementById","innerText","onload","saveChanges","rows","querySelectorAll","updatedData","forEach","row","product","product_name","querySelector","product_description","category_name","brand","color","size","parseInt","availability","checked","rating","reviews","expiry_date","shipping_cost","seller_name","seller_rating","fetch","method","headers","csrfToken","body","products_data","then","response","json","data","alert","message","success","location","reload","catch","submitCart","cartData","length","cart_items","removeItem","addProductRow","tableBody","newRow","createElement","innerHTML","appendChild"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/assets/scripts/script.js"],"sourcesContent":["function getCSRFToken() {\n    var name = 'csrftoken';\n    var value = document.cookie.match('(^|;)\\\\s*' + name + '=([^;]*)');\n    return value ? value.pop() : '';\n}\n\n\nlet cart = JSON.parse(localStorage.getItem('cart')) || [];  // Load cart from localStorage if it exists, or initialize as an empty array\n\n// Save cart to localStorage whenever it changes\nfunction saveCartToLocalStorage() {\n    localStorage.setItem('cart', JSON.stringify(cart));\n}\n\n\n// window.onload = function() {\n//     // Clear the localStorage on page load\n//     localStorage.removeItem('cart');\n// };\n\nwindow.addToCart = function(id, name, price, image) {\n    if (!id || !name || !price || !image) {\n        console.error('Error: Missing or invalid product data');\n        return;\n    }\n\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    const existingItem = cart.find(item => item.id === id);\n\n    if (existingItem) {\n        existingItem.quantity += 1;\n    } else {\n        const imageName = image.split(\"/\").pop(); // Extracts 'carrot.jpg'\n        const correctedImagePath = `images/products/${imageName}`; // ✅ Convert to correct format\n\n        cart.push({ id, name, price: parseFloat(price), quantity: 1, image:correctedImagePath });\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cart));  // Save cart in localStorage\n    console.log(\"✅ Cart Updated:\", JSON.parse(localStorage.getItem(\"cart\"))); \n    updateCartCount();  // Update cart count in the UI\n}\n\n\nfunction updateCartCount() {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const cartCount = cart.reduce((total, item) => total + item.quantity, 0);\n    \n    const cartCountElement = document.getElementById('cart-count');\n    if (cartCountElement) {\n        cartCountElement.innerText = cartCount;\n    }\n}\n\n// Call this function when the page loads\nwindow.onload = function() {\n    updateCartCount();\n};\n\n\n\n\nfunction saveChanges() {\n    // Get all the rows from the table\n    const rows = document.querySelectorAll('#productsTable tbody tr');\n    const updatedData = [];\n\n    // Iterate through each row to collect the data\n    rows.forEach(row => {\n        const product = {\n            product_name: row.querySelector('.product_name').value,\n            product_description: row.querySelector('.product_description').value,\n            price: parseFloat(row.querySelector('.price').value),\n            category_name: row.querySelector('.category_name').value,\n            brand: row.querySelector('.brand').value,\n            color: row.querySelector('.color').value,\n            size: row.querySelector('.size').value,\n            quantity: parseInt(row.querySelector('.quantity').value),\n            availability: row.querySelector('.availability').checked,\n            rating: parseFloat(row.querySelector('.rating').value),\n            reviews: parseInt(row.querySelector('.reviews').value),\n            expiry_date: row.querySelector('.expiry_date').value,\n            shipping_cost: parseFloat(row.querySelector('.shipping_cost').value),\n            seller_name: row.querySelector('.seller_name').value,\n            seller_rating: parseFloat(row.querySelector('.seller_rating').value),\n        };\n        updatedData.push(product);\n    });\n\n    // Send data to the server\n    fetch('', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n        },\n        body: JSON.stringify({ products_data: updatedData }),\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"Server response:\", data);\n            alert(data.message);\n            if (data.success) {\n                location.reload();\n            }\n        })\n        .catch(error => console.error('Error:', error));\n}\n\n\n\nfunction submitCart() {\n    const cartData = JSON.parse(localStorage.getItem('cart')) || [];\n    \n    if (cartData.length === 0) {\n        alert('Your cart is empty!');\n        return;\n    }\n\n    const csrfToken = getCSRFToken();\n\n    fetch('/checkout/', { // Adjust to your actual checkout URL\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken\n        },\n        body: JSON.stringify({ cart_items: cartData })\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Server response:', data);\n        if (data.success) {\n            alert('Cart submitted successfully!');\n            localStorage.removeItem('cart');  // Clear cart if submission is successful\n            // Optionally redirect or refresh the page\n        } else {\n            alert('Failed to submit cart');\n        }\n    })\n    .catch(error => {\n        console.error('Error submitting cart:', error);\n        alert('An error occurred while submitting the cart');\n    });\n}\n\n\n\n\nfunction addProductRow() {\n    const tableBody = document.querySelector('#productsTable tbody');\n\n    const newRow = document.createElement('tr');\n    newRow.innerHTML = `\n        <td><input type=\"text\" class=\"product_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"product_description\" value=\"\"></td>\n        <td><input type=\"number\" class=\"price\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"category_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"brand\" value=\"\"></td>\n        <td><input type=\"text\" class=\"color\" value=\"\"></td>\n        <td><input type=\"text\" class=\"size\" value=\"\"></td>\n        <td><input type=\"number\" class=\"quantity\" value=\"\"></td>\n        <td><input type=\"checkbox\" class=\"availability\"></td>\n        <td><input type=\"number\" class=\"rating\" step=\"0.1\" value=\"\"></td>\n        <td><input type=\"number\" class=\"reviews\" value=\"\"></td>\n        <td><input type=\"text\" class=\"expiry_date\" value=\"\"></td>\n        <td><input type=\"number\" class=\"shipping_cost\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"seller_name\" value=\"\"></td>\n        <td><input type=\"number\" class=\"seller_rating\" step=\"0.1\" value=\"\"></td>\n    `;\n    tableBody.appendChild(newRow);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}