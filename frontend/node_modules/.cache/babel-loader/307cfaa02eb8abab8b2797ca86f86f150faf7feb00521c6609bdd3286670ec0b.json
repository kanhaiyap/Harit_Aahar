{"ast":null,"code":"import axios from'axios';// Function to get CSRF token from cookies\nconst getCSRFToken=()=>{const name='csrftoken';const value=document.cookie.match('(^|;)\\\\s*'+name+'=([^;]*)');return value?value.pop():'';};// Function to send OTP via Twilio WhatsApp API\n// Function to send OTP\nexport const sendOTP=async phoneNumber=>{try{const csrfToken=getCSRFToken();// Retrieve CSRF token from cookies\nconst response=await axios.post('/api/auth/send_otp/',{phone_number:phoneNumber},{headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken// Include CSRF token in request headers\n},withCredentials:true// Ensure cookies are sent with the request\n});return response.data;}catch(error){console.error('Error sending OTP:',error.response?error.response.data:error.message);throw error;}};// Function to verify OTP\nexport const verifyOTP=async(phoneNumber,otp)=>{try{const response=await axios.post('/api/auth/verify_otp/',{phone_number:phoneNumber,otp});return response.data;}catch(error){console.error('Error verifying OTP:',error);throw error;}};","map":{"version":3,"names":["axios","getCSRFToken","name","value","document","cookie","match","pop","sendOTP","phoneNumber","csrfToken","response","post","phone_number","headers","withCredentials","data","error","console","message","verifyOTP","otp"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/frontend/src/auth/AuthUtils.js"],"sourcesContent":["import axios from 'axios';\n\n\n// Function to get CSRF token from cookies\nconst getCSRFToken = () => {\n    const name = 'csrftoken';\n    const value = document.cookie.match('(^|;)\\\\s*' + name + '=([^;]*)');\n    return value ? value.pop() : '';\n  };\n  \n// Function to send OTP via Twilio WhatsApp API\n// Function to send OTP\nexport const sendOTP = async (phoneNumber) => {\n    try {\n      const csrfToken = getCSRFToken();  // Retrieve CSRF token from cookies\n  \n      const response = await axios.post('/api/auth/send_otp/', \n        { phone_number: phoneNumber },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken  // Include CSRF token in request headers\n          },\n          withCredentials: true  // Ensure cookies are sent with the request\n        }\n      );\n  \n      return response.data;\n    } catch (error) {\n      console.error('Error sending OTP:', error.response ? error.response.data : error.message);\n      throw error;\n    }\n  };\n\n// Function to verify OTP\nexport const verifyOTP = async (phoneNumber, otp) => {\n  try {\n    const response = await axios.post('/api/auth/verify_otp/', { phone_number: phoneNumber, otp });\n    return response.data;\n  } catch (error) {\n    console.error('Error verifying OTP:', error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAGzB;AACA,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAAC,IAAI,CAAG,WAAW,CACxB,KAAM,CAAAC,KAAK,CAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,WAAW,CAAGJ,IAAI,CAAG,UAAU,CAAC,CACpE,MAAO,CAAAC,KAAK,CAAGA,KAAK,CAACI,GAAG,CAAC,CAAC,CAAG,EAAE,CACjC,CAAC,CAEH;AACA;AACA,MAAO,MAAM,CAAAC,OAAO,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC1C,GAAI,CACF,KAAM,CAAAC,SAAS,CAAGT,YAAY,CAAC,CAAC,CAAG;AAEnC,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,IAAI,CAAC,qBAAqB,CACrD,CAAEC,YAAY,CAAEJ,WAAY,CAAC,CAC7B,CACEK,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,aAAa,CAAEJ,SAAW;AAC5B,CAAC,CACDK,eAAe,CAAE,IAAM;AACzB,CACF,CAAC,CAED,MAAO,CAAAJ,QAAQ,CAACK,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAACN,QAAQ,CAAGM,KAAK,CAACN,QAAQ,CAACK,IAAI,CAAGC,KAAK,CAACE,OAAO,CAAC,CACzF,KAAM,CAAAF,KAAK,CACb,CACF,CAAC,CAEH;AACA,MAAO,MAAM,CAAAG,SAAS,CAAG,KAAAA,CAAOX,WAAW,CAAEY,GAAG,GAAK,CACnD,GAAI,CACF,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,IAAI,CAAC,uBAAuB,CAAE,CAAEC,YAAY,CAAEJ,WAAW,CAAEY,GAAI,CAAC,CAAC,CAC9F,MAAO,CAAAV,QAAQ,CAACK,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}