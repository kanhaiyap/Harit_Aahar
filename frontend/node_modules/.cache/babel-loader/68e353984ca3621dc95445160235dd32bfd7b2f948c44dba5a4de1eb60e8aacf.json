{"ast":null,"code":"function getCSRFToken(){var name='csrftoken';var value=document.cookie.match('(^|;)\\\\s*'+name+'=([^;]*)');return value?value.pop():'';}let cart=JSON.parse(localStorage.getItem('cart'))||[];// Load cart from localStorage if it exists, or initialize as an empty array\n// Save cart to localStorage whenever it changes\nfunction saveCartToLocalStorage(){localStorage.setItem('cart',JSON.stringify(cart));}// window.onload = function() {\n//     // Clear the localStorage on page load\n//     localStorage.removeItem('cart');\n// };\nwindow.addToCart=function(id,name,price,image){if(!id||!name||!price||!image){console.error('Error: Missing or invalid product data');return;}let cart=JSON.parse(localStorage.getItem('cart'))||[];const existingItem=cart.find(item=>item.id===id);if(existingItem){existingItem.quantity+=1;}else{// const imageName = image.split(\"/\").pop(); // Extracts 'carrot.jpg'\n// const correctedImagePath = `images/products/${imageName}`; // ✅ Convert to correct format\nconst formattedImagePath=image.startsWith(\"/products/\")?`/images/products/${image.split(\"/\").pop()}`// ✅ Convert `/products/` to `/images/products/`\n:image;cart.push({id,name,price:parseFloat(price),quantity:1,image:formattedImagePath});}localStorage.setItem('cart',JSON.stringify(cart));// Save cart in localStorage\nconsole.log(\"✅ Cart Updated:\",JSON.parse(localStorage.getItem(\"cart\")));updateCartCount();// Update cart count in the UI\n};function updateCartCount(){const cart=JSON.parse(localStorage.getItem('cart'))||[];const cartCount=cart.reduce((total,item)=>total+item.quantity,0);const cartCountElement=document.getElementById('cart-count');if(cartCountElement){cartCountElement.innerText=cartCount;}}// Call this function when the page loads\nwindow.onload=function(){updateCartCount();};function saveChanges(){// Get all the rows from the table\nconst rows=document.querySelectorAll('#productsTable tbody tr');const updatedData=[];// Iterate through each row to collect the data\nrows.forEach(row=>{const product={product_name:row.querySelector('.product_name').value,product_description:row.querySelector('.product_description').value,price:parseFloat(row.querySelector('.price').value),category_name:row.querySelector('.category_name').value,brand:row.querySelector('.brand').value,color:row.querySelector('.color').value,size:row.querySelector('.size').value,quantity:parseInt(row.querySelector('.quantity').value),availability:row.querySelector('.availability').checked,rating:parseFloat(row.querySelector('.rating').value),reviews:parseInt(row.querySelector('.reviews').value),expiry_date:row.querySelector('.expiry_date').value,shipping_cost:parseFloat(row.querySelector('.shipping_cost').value),seller_name:row.querySelector('.seller_name').value,seller_rating:parseFloat(row.querySelector('.seller_rating').value)};updatedData.push(product);});// Send data to the server\nfetch('',{method:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken},body:JSON.stringify({products_data:updatedData})}).then(response=>response.json()).then(data=>{console.log(\"Server response:\",data);alert(data.message);if(data.success){location.reload();}}).catch(error=>console.error('Error:',error));}function submitCart(){const cartData=JSON.parse(localStorage.getItem('cart'))||[];if(cartData.length===0){alert('Your cart is empty!');return;}const csrfToken=getCSRFToken();fetch('/checkout/',{// Adjust to your actual checkout URL\nmethod:'POST',headers:{'Content-Type':'application/json','X-CSRFToken':csrfToken},body:JSON.stringify({cart_items:cartData})}).then(response=>response.json()).then(data=>{console.log('Server response:',data);if(data.success){alert('Cart submitted successfully!');localStorage.removeItem('cart');// Clear cart if submission is successful\n// Optionally redirect or refresh the page\n}else{alert('Failed to submit cart');}}).catch(error=>{console.error('Error submitting cart:',error);alert('An error occurred while submitting the cart');});}function addProductRow(){const tableBody=document.querySelector('#productsTable tbody');const newRow=document.createElement('tr');newRow.innerHTML=`\n        <td><input type=\"text\" class=\"product_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"product_description\" value=\"\"></td>\n        <td><input type=\"number\" class=\"price\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"category_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"brand\" value=\"\"></td>\n        <td><input type=\"text\" class=\"color\" value=\"\"></td>\n        <td><input type=\"text\" class=\"size\" value=\"\"></td>\n        <td><input type=\"number\" class=\"quantity\" value=\"\"></td>\n        <td><input type=\"checkbox\" class=\"availability\"></td>\n        <td><input type=\"number\" class=\"rating\" step=\"0.1\" value=\"\"></td>\n        <td><input type=\"number\" class=\"reviews\" value=\"\"></td>\n        <td><input type=\"text\" class=\"expiry_date\" value=\"\"></td>\n        <td><input type=\"number\" class=\"shipping_cost\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"seller_name\" value=\"\"></td>\n        <td><input type=\"number\" class=\"seller_rating\" step=\"0.1\" value=\"\"></td>\n    `;tableBody.appendChild(newRow);}","map":{"version":3,"names":["getCSRFToken","name","value","document","cookie","match","pop","cart","JSON","parse","localStorage","getItem","saveCartToLocalStorage","setItem","stringify","window","addToCart","id","price","image","console","error","existingItem","find","item","quantity","formattedImagePath","startsWith","split","push","parseFloat","log","updateCartCount","cartCount","reduce","total","cartCountElement","getElementById","innerText","onload","saveChanges","rows","querySelectorAll","updatedData","forEach","row","product","product_name","querySelector","product_description","category_name","brand","color","size","parseInt","availability","checked","rating","reviews","expiry_date","shipping_cost","seller_name","seller_rating","fetch","method","headers","csrfToken","body","products_data","then","response","json","data","alert","message","success","location","reload","catch","submitCart","cartData","length","cart_items","removeItem","addProductRow","tableBody","newRow","createElement","innerHTML","appendChild"],"sources":["/Users/kunwarkanhaiyakamlakantpandey/Downloads/project of harit kranti/harit_aahar1/Harit_Aahar/frontend/src/assets/scripts/script.js"],"sourcesContent":["function getCSRFToken() {\n    var name = 'csrftoken';\n    var value = document.cookie.match('(^|;)\\\\s*' + name + '=([^;]*)');\n    return value ? value.pop() : '';\n}\n\n\nlet cart = JSON.parse(localStorage.getItem('cart')) || [];  // Load cart from localStorage if it exists, or initialize as an empty array\n\n// Save cart to localStorage whenever it changes\nfunction saveCartToLocalStorage() {\n    localStorage.setItem('cart', JSON.stringify(cart));\n}\n\n\n// window.onload = function() {\n//     // Clear the localStorage on page load\n//     localStorage.removeItem('cart');\n// };\n\nwindow.addToCart = function(id, name, price, image) {\n    if (!id || !name || !price || !image) {\n        console.error('Error: Missing or invalid product data');\n        return;\n    }\n\n    let cart = JSON.parse(localStorage.getItem('cart')) || [];\n\n    const existingItem = cart.find(item => item.id === id);\n\n    if (existingItem) {\n        existingItem.quantity += 1;\n    } else {\n        // const imageName = image.split(\"/\").pop(); // Extracts 'carrot.jpg'\n        // const correctedImagePath = `images/products/${imageName}`; // ✅ Convert to correct format\n        const formattedImagePath = image.startsWith(\"/products/\")\n            ? `/images/products/${image.split(\"/\").pop()}` // ✅ Convert `/products/` to `/images/products/`\n            : image;\n        cart.push({ id, name, price: parseFloat(price),\n             quantity: 1, image:formattedImagePath });\n    }\n\n    localStorage.setItem('cart', JSON.stringify(cart));  // Save cart in localStorage\n    console.log(\"✅ Cart Updated:\", JSON.parse(localStorage.getItem(\"cart\"))); \n    updateCartCount();  // Update cart count in the UI\n}\n\n\nfunction updateCartCount() {\n    const cart = JSON.parse(localStorage.getItem('cart')) || [];\n    const cartCount = cart.reduce((total, item) => total + item.quantity, 0);\n    \n    const cartCountElement = document.getElementById('cart-count');\n    if (cartCountElement) {\n        cartCountElement.innerText = cartCount;\n    }\n}\n\n// Call this function when the page loads\nwindow.onload = function() {\n    updateCartCount();\n};\n\n\n\n\nfunction saveChanges() {\n    // Get all the rows from the table\n    const rows = document.querySelectorAll('#productsTable tbody tr');\n    const updatedData = [];\n\n    // Iterate through each row to collect the data\n    rows.forEach(row => {\n        const product = {\n            product_name: row.querySelector('.product_name').value,\n            product_description: row.querySelector('.product_description').value,\n            price: parseFloat(row.querySelector('.price').value),\n            category_name: row.querySelector('.category_name').value,\n            brand: row.querySelector('.brand').value,\n            color: row.querySelector('.color').value,\n            size: row.querySelector('.size').value,\n            quantity: parseInt(row.querySelector('.quantity').value),\n            availability: row.querySelector('.availability').checked,\n            rating: parseFloat(row.querySelector('.rating').value),\n            reviews: parseInt(row.querySelector('.reviews').value),\n            expiry_date: row.querySelector('.expiry_date').value,\n            shipping_cost: parseFloat(row.querySelector('.shipping_cost').value),\n            seller_name: row.querySelector('.seller_name').value,\n            seller_rating: parseFloat(row.querySelector('.seller_rating').value),\n        };\n        updatedData.push(product);\n    });\n\n    // Send data to the server\n    fetch('', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken,\n        },\n        body: JSON.stringify({ products_data: updatedData }),\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"Server response:\", data);\n            alert(data.message);\n            if (data.success) {\n                location.reload();\n            }\n        })\n        .catch(error => console.error('Error:', error));\n}\n\n\n\nfunction submitCart() {\n    const cartData = JSON.parse(localStorage.getItem('cart')) || [];\n    \n    if (cartData.length === 0) {\n        alert('Your cart is empty!');\n        return;\n    }\n\n    const csrfToken = getCSRFToken();\n\n    fetch('/checkout/', { // Adjust to your actual checkout URL\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrfToken\n        },\n        body: JSON.stringify({ cart_items: cartData })\n    })\n    .then(response => response.json())\n    .then(data => {\n        console.log('Server response:', data);\n        if (data.success) {\n            alert('Cart submitted successfully!');\n            localStorage.removeItem('cart');  // Clear cart if submission is successful\n            // Optionally redirect or refresh the page\n        } else {\n            alert('Failed to submit cart');\n        }\n    })\n    .catch(error => {\n        console.error('Error submitting cart:', error);\n        alert('An error occurred while submitting the cart');\n    });\n}\n\n\n\n\nfunction addProductRow() {\n    const tableBody = document.querySelector('#productsTable tbody');\n\n    const newRow = document.createElement('tr');\n    newRow.innerHTML = `\n        <td><input type=\"text\" class=\"product_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"product_description\" value=\"\"></td>\n        <td><input type=\"number\" class=\"price\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"category_name\" value=\"\"></td>\n        <td><input type=\"text\" class=\"brand\" value=\"\"></td>\n        <td><input type=\"text\" class=\"color\" value=\"\"></td>\n        <td><input type=\"text\" class=\"size\" value=\"\"></td>\n        <td><input type=\"number\" class=\"quantity\" value=\"\"></td>\n        <td><input type=\"checkbox\" class=\"availability\"></td>\n        <td><input type=\"number\" class=\"rating\" step=\"0.1\" value=\"\"></td>\n        <td><input type=\"number\" class=\"reviews\" value=\"\"></td>\n        <td><input type=\"text\" class=\"expiry_date\" value=\"\"></td>\n        <td><input type=\"number\" class=\"shipping_cost\" step=\"0.01\" value=\"\"></td>\n        <td><input type=\"text\" class=\"seller_name\" value=\"\"></td>\n        <td><input type=\"number\" class=\"seller_rating\" step=\"0.1\" value=\"\"></td>\n    `;\n    tableBody.appendChild(newRow);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}